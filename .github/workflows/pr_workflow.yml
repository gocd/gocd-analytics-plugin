# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Testing For PRs

on: [ pull_request ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    name: test (postgres-${{ matrix.postgres-version }})
    strategy:
      matrix:
        # See https://endoflife.date/postgresql
        postgres-version: [ "13", "14", "15", "16", "17" ]
      fail-fast: false
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 20s
          --health-retries 10
        ports:
          - 5432:5432
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 17
          distribution: temurin
      - name: Set up NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: npm
      - name: Build with Gradle
        env:
          PGPASSWORD: postgres
        run: ./gradlew assemble check
